// Type definitions for Hap
// Definitions by: Hap <https://www.quickapp.cn/>
/**
 * 文件存储
 * 接口声明: {"name": "system.file"}
 */
export default class file {
    /**
     * 将源文件移动到指定位置
     * @param obj
     * @property srcUri 源文件的uri，不能是应用资源路径和tmp类型的uri
     * @property dstUri 目标文件的uri，不能是应用资源路径和tmp类型的uri
     * @property success 成功回调，返回目标文件的uri
     * @property fail 失败回调
     * @property complete 执行结束后的回调
     */
    static move(obj: { srcUri: string, dstUri: string, success?: Function, fail?: Function, complete?: Function }): void

    /**
     * 将源文件复制一份并存储到指定位置
     * @param obj
     * @property srcUri 源文件的uri，不能是应用资源路径和tmp类型的uri
     * @property dstUri 目标文件的uri，不能是应用资源路径和tmp类型的uri
     * @property success 成功回调，返回目标文件的uri
     * @property fail 失败回调
     * @property complete 执行结束后的回调
     */
    static copy(obj: { srcUri: string, dstUri: string, success?: Function, fail?: Function, complete?: Function }): void

    /**
     * 获取指定目录下的文件列表
     * @param obj
     * @property uri 目录uri，不能是应用资源路径和tmp类型的uri
     * @property success 成功回调，返回{ fileList: [{ uri: 'file1', lastModifiedTime: 1234456, length: 123456} ...]}
     * @property fail 失败回调
     * @property complete 执行结束后的回调
     */
    static list(obj: { uri: string, success?: Function, fail?: Function, complete?: Function }): void

    /**
     * 获取本地文件的文件信息
     * @param obj
     * @property uri 目录uri，支持 `tmp` 类型uri,不能是应用资源路径
     * @property success 成功回调，返回{ uri: 'file1', length: 123456, lastModifiedTime: 1233456 }
     * @property fail 失败回调
     * @property complete 执行结束后的回调
     */
    static get(obj: { uri: string, success?: Function, fail?: Function, complete?: Function }): void

    /**
     * 删除本地存储的文件
     * @param obj
     * @property uri 需要删除的文件uri，不能是应用资源路径和tmp类型的uri
     * @property success 成功回调
     * @property fail 失败回调
     * @property complete 执行结束后的回调
     */
    static delete(obj: { uri: string, success?: Function, fail?: Function, complete?: Function }): void

    /**
     * 写文本到文件
     * @param obj
     * @property uri 本地文件路径，不支持资源文件路径和tmp分区，如果文件不存在会创建文件
     * @property text 需要写入的字符串
     * @property encoding 编码格式，默认UTF-8
     * @property success 成功回调
     * @property fail 失败回调
     * @property complete 执行结束后的回调
     */
    static writeText(obj: { uri: string, text: string, encoding?: string, success?: Function, fail?: Function, complete?: Function }): void

    /**
     * 写Buffer到文件
     * @param obj
     * @property uri 本地文件路径，不支持资源文件路径和tmp分区，如果文件不存在会创建文件
     * @property buffer 需要写入的Buffer
     * @property position 指向文件开始写入数据的位置的偏移量，默认0
     * @property success 成功回调
     * @property fail 失败回调
     * @property complete 执行结束后的回调
     */
    static writeArrayBuffer(obj: { uri: string, buffer: Uint8Array[], position?: number, success?: Function, fail?: Function, complete?: Function }): void

    /**
     * 从文件中读取文本
     * @param obj
     * @property uri 本地文件路径
     * @property encoding 编码格式，默认UTF-8
     * @property success 成功回调
     * @property fail 失败回调
     * @property complete 执行结束后的回调
     */
    static readText(obj: { uri: string, encoding?: string, success?: Function, fail?: Function, complete?: Function }): void

    /**
     * 从文件中读取Buffer
     * @param obj
     * @property uri 本地文件路径
     * @property position 读取的起始位置，默认值为文件的起始位置
     * @property length 读取的长度，不填写则读取到文件结尾
     * @property success 成功回调
     * @property fail 失败回调
     * @property complete 执行结束后的回调
     */
    static readArrayBuffer(obj: { uri: string, position?: number, length?: number, success?: Function, fail?: Function, complete?: Function }): void
}
